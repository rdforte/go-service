# Contains all the base k8s for setup

apiVersion: v1
kind: Namespace
metadata:
  name: sales-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sales-pod # Base POD name
  namespace: sales-system
spec:
  selector:
    matchLabels:
      app: sales # Selector for POD name search.
  template:
    metadata:
      labels:
        app: sales
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      terminationGracePeriodSeconds: 60
      initContainers:
      # sales-api init container configuration
      - name: init-migrate
        image: sales-api-image
        command: ['./admin'] # migrate the database when building app
      containers:
      - name: sales-api
        image: sales-api-image
        # open up the ports for the container
        ports:
        - name: sales-api
          containerPort: 3000
        - name: sales-api-debug
          containerPort: 4000
        # tell k8s to hit this endpoint on port 4000
        readinessProbe: # readiness probe marks the service available to accept traffic.
          httpGet:
            path: /debug/readiness
            port: 4000
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2 # if we fail twice don't send traffic
        livenessProbe: # liveness probe marks the service alive or dead (to be restarted).
          httpGet:
            path: /debug/liveness
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2 
        # Set Environmental variables to read for /debug/liveness
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_NAMESPACE_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBERNETES_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
---
apiVersion: v1
kind: Service
metadata:
  name: sales-service
  namespace: sales-system
spec:
  type: ClusterIP
  selector:
    app: sales
  ports:
  - name: sales-api
    port: 3000 # outside port
    targetPort: sales-api # inside port
  - name: sales-api-debug
    port: 4000
    targetPort: sales-api-debug