# Build the Go Binary.
FROM golang:1.17 as build_sales-api
ENV CGO_ENABLED 0
ARG BUILD_REF

# Create the service directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
# RUN mkdir /service
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
COPY . /service

# Build the admin binary.
WORKDIR /service/app/tooling/admin
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# Build the service binary.
WORKDIR /service/app/services/sales-api
RUN go build -ldflags "-X main.build=${BUILD_REF}"

# ------------------------------------------------------------------------------------------------------------
# ALPINE BUILD

# Run the Go Binary in Alpine.
FROM alpine:3.14
ARG BUILD_DATE
ARG BUILD_REF

# Copy executables and zarf from previouse build into new build.
# Copy keys as needed for signing JWT's.
COPY --from=build_sales-api /service/zarf/keys/. /service/zarf/keys/.
# Copy admin tooling as needed for auto migrations.
COPY --from=build_sales-api /service/app/tooling/admin/admin /service/admin
# Copy sales-api as this is the executable needed to run the app.
COPY --from=build_sales-api /service/app/services/sales-api/sales-api /service/sales-api
# Copy config as this is needed for configuration.
COPY --from=build_sales-api /service/app/config/config.yaml /service/config.yaml
# Copy in the migrations folder as this has the schemas for the migrations.
COPY --from=build_sales-api /service/business/data/schema/migrations /service/migrations

WORKDIR /service
CMD ["./sales-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="sales-api" \
      org.opencontainers.image.source="https://github.com/ardanlabs/service/app/sales-api" \
      org.opencontainers.image.revision="${BUILD_REF}" \